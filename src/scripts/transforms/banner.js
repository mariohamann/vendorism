/**
 * Tag that will be searched for to manage a file with vendorism.
 */
export const tag = 'ðŸ”’ AUTOGENERATED BY VENDORISM';
/**
 * Additional description to be optionally included with the tag.
 */
export const description = 'Removing this comment will prevent it from being managed by it.';

/**
 * Banners for different file types.
 */
export const banners = {
  default: `
/**
 * ---------------------------------------------------------------------
 * ${tag}
 * ${description}
 * ---------------------------------------------------------------------
 */
`.trim(),
  html: `
<!--
    ---------------------------------------------------------------------
    ${tag}
    ${description}
    ---------------------------------------------------------------------
-->`.trim(),
  jinja2: `
{#
  ---------------------------------------------------------------------
  ${tag}
  ${description}
  ---------------------------------------------------------------------
#}`.trim(),
  handlebars: `{{!
   ---------------------------------------------------------------------
   ${tag}
   ${description}
   ---------------------------------------------------------------------
}}`.trim(),
  frontmatter: `
# ---------------------------------------------------------------------
# ${tag}
# ${description}
# ---------------------------------------------------------------------
`.trim()
};

/**
 * Transform function to add a banner to a file.
 * 
 * @param {string} content 
 * @param {string} path 
 * @returns 
 */
export const transform = (content, path) => {
  // If the content already includes the tag, return it as is.
  if (content.includes(tag)) {
    return content;
  };

  const extension = path.split('.').pop();

  if (extension === 'html') {
    return banners.html + '\n\n' + content;
  }
  else if (extension === 'njk') {
    return banners.jinja2 + '\n\n' + content;
  }
  else if (extension === 'hbs') {
    return banners.handlebars + '\n\n' + content;
  }
  else if (extension === 'md') {
    if (content.startsWith('---')) {
      return content.replace('---', '---\n' + banners.frontmatter + '\n');
    }
    else {
      return banners.html + '\n\n' + content;
    }
  }
  else {
    return banners.default + '\n\n' + content;
  }
};
